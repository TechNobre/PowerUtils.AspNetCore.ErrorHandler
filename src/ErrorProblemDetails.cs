using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;
using Microsoft.AspNetCore.Mvc;
using PowerUtils.AspNetCore.ErrorHandler.Serializers;

namespace PowerUtils.AspNetCore.ErrorHandler
{
    [JsonConverter(typeof(ErrorProblemDetailsJsonConverter))]
    public class ErrorProblemDetails : ProblemDetails
    {
        /// <summary>
        /// ID generated by the problem to track logs
        /// </summary>
        [JsonPropertyName("traceId")]
        public string TraceId { get; set; }

        /// <summary>
        /// Error property list
        /// </summary>
        /// <example>
        /// { "Property": "Error" }
        /// </example>
        public IDictionary<string, string> Errors { get; set; } = new Dictionary<string, string>(StringComparer.InvariantCultureIgnoreCase);

        /// <summary>
        /// Initializes a new instance of <see cref="ErrorProblemDetails"/>.
        /// </summary>
        public ErrorProblemDetails() { }

        /// <summary>
        /// Serialize problem details to JSON
        /// </summary>
        public override string ToString()
            => JsonSerializer.Serialize(this);

        public static implicit operator string(ErrorProblemDetails problemDetailsResponse)
            => problemDetailsResponse.ToString();
    }
}
